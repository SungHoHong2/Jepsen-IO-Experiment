Already up-to-date.
Warning: specified :main without including it in :aot. 
Implicit AOT of :main will be removed in Leiningen 3.0.0. 
If you only need AOT for your uberjar, consider adding :aot :all into your
:uberjar profile instead.
Warning: The Main-Class specified does not exist within the jar. It may not be executable as expected. A gen-class directive may be missing in the namespace which contains the main method, or the namespace has not been AOT-compiled.
Created /jepsen/mongodb/target/jepsen.mongodb-0.3.0.jar
Wrote /jepsen/mongodb/pom.xml
Installed jar and pom into local repo.
01:00:52.809 [main] INFO  jepsen.cli - CLI options:
 {:read-concern nil,
 :max-txn-length 4,
 :concurrency 7,
 :singleton-txns false,
 :max-writes-per-key 256,
 :leave-db-running? false,
 :logging-json? false,
 :write-concern nil,
 :nemesis-interval 2,
 :ssh
 {:username "root",
  :password "root",
  :strict-host-key-checking false,
  :private-key-path nil},
 :rate 1000,
 :no-read-only-txn-write-concern false,
 :nodes ["n1" "n2" "n3" "n4" "n5" "n6" "n7"],
 :test-count 1,
 :time-limit 60,
 :version "4.2.6",
 :workload :list-append}

[FRISK] {:read-concern nil, :max-txn-length 4, :concurrency 7, :singleton-txns false, :max-writes-per-key 256, :leave-db-running? false, :logging-json? false, :write-concern nil, :nemesis-interval 2, :ssh {:username root, :password root, :strict-host-key-checking false, :private-key-path nil}, :rate 1000, :nemesis [], :no-read-only-txn-write-concern false, :nodes [n1 n2 n3 n4 n5 n6 n7], :test-count 1, :time-limit 60, :version 4.2.6, :workload :list-append}
INFO [2020-08-04 01:00:53,190] jepsen test runner - jepsen.core Running test:
 {:remote {:session nil},
 :read-concern nil,
 :max-txn-length 4,
 :concurrency 7,
 :singleton-txns false,
 :db
 {:mongos
  {:config-str "rs_config/n1:27019,n2:27019,n3:27019",
   :shard-strs ("rs_shard1/n4:27018" "rs_shard2/n7:27018")},
  :shards
  ({:name "config",
    :nodes ("n1" "n2" "n3"),
    :db
    #object[jepsen.mongodb.db$replica_set_db$reify__479 0x608cd501 "jepsen.mongodb.db$replica_set_db$reify__479@608cd501"]}
   {:name "shard1",
    :nodes ("n4" "n5" "n6"),
    :db
    #object[jepsen.mongodb.db$replica_set_db$reify__479 0x49fdbe2b "jepsen.mongodb.db$replica_set_db$reify__479@49fdbe2b"]}
   {:name "shard2",
    :nodes ("n7"),
    :db
    #object[jepsen.mongodb.db$replica_set_db$reify__479 0x72ce812e "jepsen.mongodb.db$replica_set_db$reify__479@72ce812e"]}),
  :tcpdump
  #object[jepsen.db$tcpdump$reify__3318 0x7c5df615 "jepsen.db$tcpdump$reify__3318@7c5df615"]},
 :max-writes-per-key 256,
 :leave-db-running? false,
 :name "mongodb list-append ",
 :logging-json? false,
 :write-concern nil,
 :start-time
 #object[org.joda.time.DateTime 0x1ef31f71 "2020-08-04T01:00:52.000Z"],
 :nemesis-interval 2,
 :net
 #object[jepsen.net$reify__9401 0x42679fc2 "jepsen.net$reify__9401@42679fc2"],
 :client {:conn nil},
 :barrier
 #object[java.util.concurrent.CyclicBarrier 0x613f7eb7 "java.util.concurrent.CyclicBarrier@613f7eb7"],
 :ssh
 {:username "root",
  :password "root",
  :strict-host-key-checking false,
  :private-key-path nil},
 :rate 1000,
 :checker
 #object[jepsen.checker$compose$reify__8913 0x9cfc77 "jepsen.checker$compose$reify__8913@9cfc77"],
 :nemesis
 #object[jepsen.mongodb.nemesis$shard_nemesis$reify__2101 0x28ee0a3c "jepsen.mongodb.nemesis$shard_nemesis$reify__2101@28ee0a3c"],
 :active-histories #<Atom@18d47df0: #{}>,
 :no-read-only-txn-write-concern false,
 :nodes ["n1" "n2" "n3" "n4" "n5" "n6" "n7"],
 :test-count 1,
 :generator
 (jepsen.generator.pure.Synchronize{
    :gen jepsen.generator.pure.TimeLimit{
      :limit 60000000000,
      :cutoff nil,
      :gen jepsen.generator.pure.Any{
        :gens [jepsen.generator.pure.OnThreads{
                 :f #{:nemesis},
                 :gen jepsen.generator.pure.Mix{
                   :i 1,
                   :gens [jepsen.generator.pure.Map{
                            :f #object[jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097 0x548e43b1 "jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097@548e43b1"],
                            :gen {:stateful
                                  {:stateful (gen/gvoid),
                                   :pure
                                   jepsen.generator.pure.Mix{
                                     :i 0, :gens []}},
                                  :pure
                                  jepsen.generator.pure.Mix{
                                    :i 0, :gens []}}}
                          jepsen.generator.pure.Map{
                            :f #object[jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097 0x37af24cb "jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097@37af24cb"],
                            :gen {:stateful
                                  {:stateful (gen/gvoid),
                                   :pure
                                   jepsen.generator.pure.Mix{
                                     :i 0, :gens []}},
                                  :pure
                                  jepsen.generator.pure.Mix{
                                    :i 0, :gens []}}}
                          jepsen.generator.pure.Map{
                            :f #object[jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097 0x5df6163a "jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097@5df6163a"],
                            :gen {:stateful
                                  {:stateful (gen/gvoid),
                                   :pure
                                   jepsen.generator.pure.Mix{
                                     :i 0, :gens []}},
                                  :pure
                                  jepsen.generator.pure.Mix{
                                    :i 0, :gens []}}}]}}
               jepsen.generator.pure.OnThreads{
                 :f #object[clojure.core$complement$fn__5654 0x19f02280 "clojure.core$complement$fn__5654@19f02280"],
                 :gen jepsen.generator.pure.Stagger{
                   :dt 2000000,
                   :next-time 0,
                   :gen {:stateful
                         (gen/seqone ({:type :invoke, :f :txn, :value [[:r 9 nil] [:r 8 nil]]} {:type :invoke, :f :txn, :value [[:r 8 nil]]} {:type :invoke, :f :txn, :value [[:append 5 1] [:append 7 1] [:append 9 1]]} {:type :invoke, :f :txn, :value [[:r 8 nil] [:append 7 2] [:r 9 nil]]} {:type :invoke, :f :txn, :value [[:r 8 nil] [:r 7 nil] [:append 7 3] [:append 9 2]]} {:type :invoke, :f :txn, :value [[:r 9 nil] [:r 9 nil] [:r 7 nil]]} {:type :invoke, :f :txn, :value [[:append 8 1] [:r 7 nil] [:r 9 nil]]} {:type :invoke, :f :txn, :value [[:append 8 2] [:r 9 nil] [:r 8 nil]]})),
                         :pure
                         ({:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 1] [:r 8 nil] [:append 9 2]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 8 nil]
                            [:append 9 3]
                            [:r 7 nil]
                            [:append 8 1]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 9 4]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 7 1]
                            [:r 9 nil]
                            [:r 9 nil]
                            [:r 4 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 8 nil] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 7 nil] [:append 8 2] [:append 9 5]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 7 2] [:r 8 nil] [:append 9 6]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 9 nil] [:append 8 3] [:append 8 4]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 7 3]
                            [:append 9 7]
                            [:append 9 8]
                            [:r 8 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 7 4]
                            [:r 7 nil]
                            [:append 1 1]
                            [:r 8 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 9 nil] [:append 9 9] [:r 6 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 9 10] [:append 9 11]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 7 5] [:r 8 nil] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 9 nil] [:append 7 6] [:append 9 12]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 9 13] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 14]
                            [:append 9 15]
                            [:append 7 7]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 16]
                            [:append 9 17]
                            [:append 9 18]
                            [:r 6 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 7 nil] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 9 nil] [:append 8 5] [:append 9 19]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 6 1] [:r 8 nil] [:append 9 20]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 8 6]
                            [:r 9 nil]
                            [:append 9 21]
                            [:append 7 8]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 9 nil]
                            [:append 7 9]
                            [:append 9 22]
                            [:append 9 23]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 9 24] [:r 7 nil]]}
                          {:type :invoke, :f :txn, :value [[:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 9 25]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 26]
                            [:append 9 27]
                            [:append 9 28]
                            [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 8 nil] [:r 8 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 3 nil]
                            [:append 8 7]
                            [:r 7 nil]
                            [:append 9 29]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 6 2] [:append 7 10]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 9 nil] [:r 9 nil] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 30]
                            [:append 6 3]
                            [:append 7 11]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 6 nil]
                            [:append 5 1]
                            [:append 5 2]
                            [:r 9 nil]]}
                          ...)}}}]}}}),
 :os
 #object[jepsen.os.debian.Debian 0xa3cba3a "jepsen.os.debian.Debian@a3cba3a"],
 :time-limit 60,
 :version "4.2.6",
 :workload :list-append}

INFO [2020-08-04 01:00:54,248] jepsen node n4 - jepsen.os.debian n4 setting up debian
INFO [2020-08-04 01:00:54,247] jepsen node n5 - jepsen.os.debian n5 setting up debian
INFO [2020-08-04 01:00:54,247] jepsen node n2 - jepsen.os.debian n2 setting up debian
INFO [2020-08-04 01:00:54,248] jepsen node n6 - jepsen.os.debian n6 setting up debian
INFO [2020-08-04 01:00:54,247] jepsen node n1 - jepsen.os.debian n1 setting up debian
INFO [2020-08-04 01:00:54,249] jepsen node n7 - jepsen.os.debian n7 setting up debian
INFO [2020-08-04 01:00:54,249] jepsen node n3 - jepsen.os.debian n3 setting up debian
INFO [2020-08-04 01:00:57,284] jepsen test runner - jepsen.db Tearing down DB
INFO [2020-08-04 01:00:57,288] jepsen node n4 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:57,288] jepsen node n1 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:57,288] jepsen node n3 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:57,288] jepsen node n7 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:57,288] jepsen node n2 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:57,288] jepsen node n5 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:57,288] jepsen node n6 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:57,604] jepsen node n6 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x49fdbe2b jepsen.mongodb.db$replica_set_db$reify__479@49fdbe2b]}
INFO [2020-08-04 01:00:57,604] jepsen node n1 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x608cd501 jepsen.mongodb.db$replica_set_db$reify__479@608cd501]}
INFO [2020-08-04 01:00:57,604] jepsen node n2 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x608cd501 jepsen.mongodb.db$replica_set_db$reify__479@608cd501]}
INFO [2020-08-04 01:00:57,604] jepsen node n3 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x608cd501 jepsen.mongodb.db$replica_set_db$reify__479@608cd501]}
INFO [2020-08-04 01:00:57,605] jepsen node n5 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x49fdbe2b jepsen.mongodb.db$replica_set_db$reify__479@49fdbe2b]}
INFO [2020-08-04 01:00:57,605] jepsen node n4 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x49fdbe2b jepsen.mongodb.db$replica_set_db$reify__479@49fdbe2b]}
INFO [2020-08-04 01:00:57,605] jepsen node n7 - jepsen.mongodb.db Tearing down shard {:name shard2, :nodes (n7), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x72ce812e jepsen.mongodb.db$replica_set_db$reify__479@72ce812e]}
WARN [2020-08-04 01:00:57,720] jepsen node n7 - jepsen.control Encountered error with conn [:control "n7"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:00:57,720] jepsen node n4 - jepsen.control Encountered error with conn [:control "n4"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:00:57,720] jepsen node n5 - jepsen.control Encountered error with conn [:control "n5"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:00:57,720] jepsen node n3 - jepsen.control Encountered error with conn [:control "n3"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
INFO [2020-08-04 01:00:57,989] jepsen test runner - jepsen.core Snarfing log files
INFO [2020-08-04 01:00:58,442] jepsen node n1 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:58,442] jepsen node n2 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:58,442] jepsen node n3 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:58,442] jepsen node n4 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:58,443] jepsen node n5 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:58,443] jepsen node n7 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:58,443] jepsen node n6 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:00:58,751] jepsen node n1 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x608cd501 jepsen.mongodb.db$replica_set_db$reify__479@608cd501]}
INFO [2020-08-04 01:00:58,751] jepsen node n2 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x608cd501 jepsen.mongodb.db$replica_set_db$reify__479@608cd501]}
INFO [2020-08-04 01:00:58,751] jepsen node n3 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x608cd501 jepsen.mongodb.db$replica_set_db$reify__479@608cd501]}
INFO [2020-08-04 01:00:58,753] jepsen node n4 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x49fdbe2b jepsen.mongodb.db$replica_set_db$reify__479@49fdbe2b]}
INFO [2020-08-04 01:00:58,753] jepsen node n6 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x49fdbe2b jepsen.mongodb.db$replica_set_db$reify__479@49fdbe2b]}
INFO [2020-08-04 01:00:58,754] jepsen node n5 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x49fdbe2b jepsen.mongodb.db$replica_set_db$reify__479@49fdbe2b]}
INFO [2020-08-04 01:00:58,754] jepsen node n7 - jepsen.mongodb.db Tearing down shard {:name shard2, :nodes (n7), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x72ce812e jepsen.mongodb.db$replica_set_db$reify__479@72ce812e]}
WARN [2020-08-04 01:00:58,855] jepsen node n5 - jepsen.control Encountered error with conn [:control "n5"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:00:58,855] jepsen node n4 - jepsen.control Encountered error with conn [:control "n4"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:00:58,855] jepsen node n6 - jepsen.control Encountered error with conn [:control "n6"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:00:58,856] jepsen node n7 - jepsen.control Encountered error with conn [:control "n7"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:00:59,187] main - jepsen.core Test crashed!
clojure.lang.ExceptionInfo: Command exited with non-zero status 1 on node n3:
sudo -S -u root bash -c "cd /; systemctl stop mongod"

STDIN:
null

STDOUT:


STDERR:
Failed to connect to bus: No such file or directory

	at slingshot.support$stack_trace.invoke(support.clj:201) ~[knossos-0.3.6.jar:na]
	at jepsen.control$throw_on_nonzero_exit.invokeStatic(control.clj:150) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$throw_on_nonzero_exit.invoke(control.clj:145) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) ~[clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) ~[clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) ~[classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) ~[classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) ~[classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) ~[classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) ~[jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) ~[jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) ~[clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) ~[clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) ~[clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) ~[clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) ~[clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_252]
WARN [2020-08-04 01:00:59,194] main - jepsen.cli Test crashed
clojure.lang.ExceptionInfo: Command exited with non-zero status 1 on node n3:
sudo -S -u root bash -c "cd /; systemctl stop mongod"

STDIN:
null

STDOUT:


STDERR:
Failed to connect to bus: No such file or directory

	at slingshot.support$stack_trace.invoke(support.clj:201) ~[knossos-0.3.6.jar:na]
	at jepsen.control$throw_on_nonzero_exit.invokeStatic(control.clj:150) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$throw_on_nonzero_exit.invoke(control.clj:145) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) ~[clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) ~[clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) ~[classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) ~[classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) ~[classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) ~[classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) ~[jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) ~[jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) ~[clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) ~[clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) ~[clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) ~[clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) ~[clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_252]
[FRISK] {:read-concern nil, :max-txn-length 4, :concurrency 7, :singleton-txns false, :max-writes-per-key 256, :leave-db-running? false, :logging-json? false, :write-concern nil, :nemesis-interval 2, :ssh {:username root, :password root, :strict-host-key-checking false, :private-key-path nil}, :rate 1000, :nemesis [:pause :kill :partition :clock :member], :no-read-only-txn-write-concern false, :nodes [n1 n2 n3 n4 n5 n6 n7], :test-count 1, :time-limit 60, :version 4.2.6, :workload :list-append}
INFO [2020-08-04 01:01:01,841] jepsen test runner - jepsen.core Running test:
 {:remote {:session nil},
 :read-concern nil,
 :max-txn-length 4,
 :concurrency 7,
 :singleton-txns false,
 :db
 {:mongos
  {:config-str "rs_config/n1:27019,n2:27019,n3:27019",
   :shard-strs ("rs_shard1/n4:27018" "rs_shard2/n7:27018")},
  :shards
  ({:name "config",
    :nodes ("n1" "n2" "n3"),
    :db
    #object[jepsen.mongodb.db$replica_set_db$reify__479 0x245cb8df "jepsen.mongodb.db$replica_set_db$reify__479@245cb8df"]}
   {:name "shard1",
    :nodes ("n4" "n5" "n6"),
    :db
    #object[jepsen.mongodb.db$replica_set_db$reify__479 0x3a6e9856 "jepsen.mongodb.db$replica_set_db$reify__479@3a6e9856"]}
   {:name "shard2",
    :nodes ("n7"),
    :db
    #object[jepsen.mongodb.db$replica_set_db$reify__479 0x463045fb "jepsen.mongodb.db$replica_set_db$reify__479@463045fb"]}),
  :tcpdump
  #object[jepsen.db$tcpdump$reify__3318 0x1bee0085 "jepsen.db$tcpdump$reify__3318@1bee0085"]},
 :max-writes-per-key 256,
 :leave-db-running? false,
 :name "mongodb list-append pause,kill,partition,clock,member",
 :logging-json? false,
 :write-concern nil,
 :start-time
 #object[org.joda.time.DateTime 0x597d48ca "2020-08-04T01:00:59.000Z"],
 :nemesis-interval 2,
 :net
 #object[jepsen.net$reify__9401 0x42679fc2 "jepsen.net$reify__9401@42679fc2"],
 :client {:conn nil},
 :barrier
 #object[java.util.concurrent.CyclicBarrier 0x7b297740 "java.util.concurrent.CyclicBarrier@7b297740"],
 :ssh
 {:username "root",
  :password "root",
  :strict-host-key-checking false,
  :private-key-path nil},
 :rate 1000,
 :checker
 #object[jepsen.checker$compose$reify__8913 0x4b3a01d8 "jepsen.checker$compose$reify__8913@4b3a01d8"],
 :nemesis
 #object[jepsen.mongodb.nemesis$shard_nemesis$reify__2101 0x4faf1f4 "jepsen.mongodb.nemesis$shard_nemesis$reify__2101@4faf1f4"],
 :active-histories #<Atom@11e71181: #{}>,
 :no-read-only-txn-write-concern false,
 :nodes ["n1" "n2" "n3" "n4" "n5" "n6" "n7"],
 :test-count 1,
 :generator
 (jepsen.generator.pure.Synchronize{
    :gen jepsen.generator.pure.TimeLimit{
      :limit 60000000000,
      :cutoff nil,
      :gen jepsen.generator.pure.Any{
        :gens [jepsen.generator.pure.OnThreads{
                 :f #{:nemesis},
                 :gen jepsen.generator.pure.Mix{
                   :i 2,
                   :gens [jepsen.generator.pure.Map{
                            :f #object[jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097 0x4d81e83a "jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097@4d81e83a"],
                            :gen {:stateful
                                  {:stateful
                                   (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x5d2a86c0 "clojure.core$partial$fn__5824@5d2a86c0"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil}))), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] ({:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} ...)], :i 0}}} #jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x26c7b1c6 "clojure.core$partial$fn__5824@26c7b1c6"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x3d1c933 "jepsen.generator$f_map$fn__4436@3d1c933"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x626c569b "jepsen.nemesis.time$reset_gen_select$fn__2041@626c569b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x65593327 "jepsen.nemesis.time$bump_gen_select$fn__2044@65593327"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x68bd8ca7 "jepsen.nemesis.time$strobe_gen_select$fn__2049@68bd8ca7"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 0, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x6744707b "jepsen.nemesis.time$reset_gen_select$fn__2041@6744707b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x4b28a7bf "jepsen.nemesis.time$bump_gen_select$fn__2044@4b28a7bf"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0xd36c1c3 "jepsen.nemesis.time$strobe_gen_select$fn__2049@d36c1c3"]]}})})), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.pure.Map{:f #object[jepsen.generator.pure$f_map$transform__3608 0x4d69d288 "jepsen.generator.pure$f_map$transform__3608@4d69d288"], :gen #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x626c569b "jepsen.nemesis.time$reset_gen_select$fn__2041@626c569b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x65593327 "jepsen.nemesis.time$bump_gen_select$fn__2044@65593327"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x68bd8ca7 "jepsen.nemesis.time$strobe_gen_select$fn__2049@68bd8ca7"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 0, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x6744707b "jepsen.nemesis.time$reset_gen_select$fn__2041@6744707b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x4b28a7bf "jepsen.nemesis.time$bump_gen_select$fn__2044@4b28a7bf"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0xd36c1c3 "jepsen.nemesis.time$strobe_gen_select$fn__2049@d36c1c3"]]}})}}}} #jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x437281c5 "clojure.core$partial$fn__5824@437281c5"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}}}]),
                                   :pure
                                   jepsen.generator.pure.Mix{
                                     :i 0,
                                     :gens
                                     [{:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x5d2a86c0 "clojure.core$partial$fn__5824@5d2a86c0"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil}))),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         jepsen.generator.pure.FlipFlop{
                                           :gens
                                           [#object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"]
                                            ({:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             ...)],
                                           :i 0}}}
                                      {:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x26c7b1c6 "clojure.core$partial$fn__5824@26c7b1c6"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x3d1c933 "jepsen.generator$f_map$fn__4436@3d1c933"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x626c569b "jepsen.nemesis.time$reset_gen_select$fn__2041@626c569b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x65593327 "jepsen.nemesis.time$bump_gen_select$fn__2044@65593327"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x68bd8ca7 "jepsen.nemesis.time$strobe_gen_select$fn__2049@68bd8ca7"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 0, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x6744707b "jepsen.nemesis.time$reset_gen_select$fn__2041@6744707b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x4b28a7bf "jepsen.nemesis.time$bump_gen_select$fn__2044@4b28a7bf"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0xd36c1c3 "jepsen.nemesis.time$strobe_gen_select$fn__2049@d36c1c3"]]}})})),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         jepsen.generator.pure.Map{
                                           :f
                                           #object[jepsen.generator.pure$f_map$transform__3608 0x4d69d288 "jepsen.generator.pure$f_map$transform__3608@4d69d288"],
                                           :gen
                                           {:stateful
                                            (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x626c569b "jepsen.nemesis.time$reset_gen_select$fn__2041@626c569b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x65593327 "jepsen.nemesis.time$bump_gen_select$fn__2044@65593327"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x68bd8ca7 "jepsen.nemesis.time$strobe_gen_select$fn__2049@68bd8ca7"]]))]),
                                            :pure
                                            (jepsen.generator.pure.Synchronize{
                                               :gen
                                               {:type :info,
                                                :f :check-offsets}}
                                             jepsen.generator.pure.Synchronize{
                                               :gen
                                               jepsen.generator.pure.Mix{
                                                 :i 0,
                                                 :gens
                                                 [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x6744707b "jepsen.nemesis.time$reset_gen_select$fn__2041@6744707b"]
                                                  #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x4b28a7bf "jepsen.nemesis.time$bump_gen_select$fn__2044@4b28a7bf"]
                                                  #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0xd36c1c3 "jepsen.nemesis.time$strobe_gen_select$fn__2049@d36c1c3"]]}})}}}}
                                      {:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x437281c5 "clojure.core$partial$fn__5824@437281c5"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         {:stateful
                                          (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]),
                                          :pure
                                          jepsen.generator.pure.Mix{
                                            :i 0,
                                            :gens
                                            [{:stateful
                                              (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})),
                                              :pure
                                              jepsen.generator.pure.FlipFlop{
                                                :gens
                                                [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"]
                                                 ({:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  ...)],
                                                :i 0}}]}}}}]}},
                                  :pure
                                  jepsen.generator.pure.Mix{
                                    :i 2,
                                    :gens
                                    [{:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x5d2a86c0 "clojure.core$partial$fn__5824@5d2a86c0"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"] {:type :info, :f :stop-partition, :value nil}))),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        jepsen.generator.pure.FlipFlop{
                                          :gens
                                          [#object[jepsen.nemesis.combined$partition_package$start__2084 0x74697863 "jepsen.nemesis.combined$partition_package$start__2084@74697863"]
                                           ({:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            ...)],
                                          :i 0}}}
                                     {:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x26c7b1c6 "clojure.core$partial$fn__5824@26c7b1c6"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x3d1c933 "jepsen.generator$f_map$fn__4436@3d1c933"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x626c569b "jepsen.nemesis.time$reset_gen_select$fn__2041@626c569b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x65593327 "jepsen.nemesis.time$bump_gen_select$fn__2044@65593327"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x68bd8ca7 "jepsen.nemesis.time$strobe_gen_select$fn__2049@68bd8ca7"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 0, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x6744707b "jepsen.nemesis.time$reset_gen_select$fn__2041@6744707b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x4b28a7bf "jepsen.nemesis.time$bump_gen_select$fn__2044@4b28a7bf"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0xd36c1c3 "jepsen.nemesis.time$strobe_gen_select$fn__2049@d36c1c3"]]}})})),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        jepsen.generator.pure.Map{
                                          :f
                                          #object[jepsen.generator.pure$f_map$transform__3608 0x4d69d288 "jepsen.generator.pure$f_map$transform__3608@4d69d288"],
                                          :gen
                                          {:stateful
                                           (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x626c569b "jepsen.nemesis.time$reset_gen_select$fn__2041@626c569b"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x65593327 "jepsen.nemesis.time$bump_gen_select$fn__2044@65593327"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x68bd8ca7 "jepsen.nemesis.time$strobe_gen_select$fn__2049@68bd8ca7"]]))]),
                                           :pure
                                           (jepsen.generator.pure.Synchronize{
                                              :gen
                                              {:type :info,
                                               :f :check-offsets}}
                                            jepsen.generator.pure.Synchronize{
                                              :gen
                                              jepsen.generator.pure.Mix{
                                                :i 0,
                                                :gens
                                                [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x6744707b "jepsen.nemesis.time$reset_gen_select$fn__2041@6744707b"]
                                                 #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x4b28a7bf "jepsen.nemesis.time$bump_gen_select$fn__2044@4b28a7bf"]
                                                 #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0xd36c1c3 "jepsen.nemesis.time$strobe_gen_select$fn__2049@d36c1c3"]]}})}}}}
                                     {:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x437281c5 "clojure.core$partial$fn__5824@437281c5"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        {:stateful
                                         (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]),
                                         :pure
                                         jepsen.generator.pure.Mix{
                                           :i 0,
                                           :gens
                                           [{:stateful
                                             (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"] {:type :info, :f :resume, :value :all})),
                                             :pure
                                             jepsen.generator.pure.FlipFlop{
                                               :gens
                                               [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x24a4e2c5 "jepsen.nemesis.combined$db_generators$pause__2067@24a4e2c5"]
                                                ({:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 ...)],
                                               :i 0}}]}}}}]}}}
                          jepsen.generator.pure.Map{
                            :f #object[jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097 0x55053f81 "jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097@55053f81"],
                            :gen {:stateful
                                  {:stateful
                                   (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x184de357 "clojure.core$partial$fn__5824@184de357"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil}))), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] ({:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} ...)], :i 0}}} #jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x6dcf7b6a "clojure.core$partial$fn__5824@6dcf7b6a"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x53dba9cd "jepsen.generator$f_map$fn__4436@53dba9cd"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x247bbfba "jepsen.nemesis.time$reset_gen_select$fn__2041@247bbfba"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x5834198f "jepsen.nemesis.time$bump_gen_select$fn__2044@5834198f"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x4eb63dc8 "jepsen.nemesis.time$strobe_gen_select$fn__2049@4eb63dc8"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 0, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x402d6012 "jepsen.nemesis.time$reset_gen_select$fn__2041@402d6012"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x395281c2 "jepsen.nemesis.time$bump_gen_select$fn__2044@395281c2"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x41d20f06 "jepsen.nemesis.time$strobe_gen_select$fn__2049@41d20f06"]]}})})), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.pure.Map{:f #object[jepsen.generator.pure$f_map$transform__3608 0x3e753289 "jepsen.generator.pure$f_map$transform__3608@3e753289"], :gen #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x247bbfba "jepsen.nemesis.time$reset_gen_select$fn__2041@247bbfba"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x5834198f "jepsen.nemesis.time$bump_gen_select$fn__2044@5834198f"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x4eb63dc8 "jepsen.nemesis.time$strobe_gen_select$fn__2049@4eb63dc8"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 0, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x402d6012 "jepsen.nemesis.time$reset_gen_select$fn__2041@402d6012"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x395281c2 "jepsen.nemesis.time$bump_gen_select$fn__2044@395281c2"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x41d20f06 "jepsen.nemesis.time$strobe_gen_select$fn__2049@41d20f06"]]}})}}}} #jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x1573e8a5 "clojure.core$partial$fn__5824@1573e8a5"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}}}]),
                                   :pure
                                   jepsen.generator.pure.Mix{
                                     :i 0,
                                     :gens
                                     [{:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x184de357 "clojure.core$partial$fn__5824@184de357"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil}))),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         jepsen.generator.pure.FlipFlop{
                                           :gens
                                           [#object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"]
                                            ({:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             ...)],
                                           :i 0}}}
                                      {:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x6dcf7b6a "clojure.core$partial$fn__5824@6dcf7b6a"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x53dba9cd "jepsen.generator$f_map$fn__4436@53dba9cd"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x247bbfba "jepsen.nemesis.time$reset_gen_select$fn__2041@247bbfba"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x5834198f "jepsen.nemesis.time$bump_gen_select$fn__2044@5834198f"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x4eb63dc8 "jepsen.nemesis.time$strobe_gen_select$fn__2049@4eb63dc8"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 0, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x402d6012 "jepsen.nemesis.time$reset_gen_select$fn__2041@402d6012"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x395281c2 "jepsen.nemesis.time$bump_gen_select$fn__2044@395281c2"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x41d20f06 "jepsen.nemesis.time$strobe_gen_select$fn__2049@41d20f06"]]}})})),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         jepsen.generator.pure.Map{
                                           :f
                                           #object[jepsen.generator.pure$f_map$transform__3608 0x3e753289 "jepsen.generator.pure$f_map$transform__3608@3e753289"],
                                           :gen
                                           {:stateful
                                            (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x247bbfba "jepsen.nemesis.time$reset_gen_select$fn__2041@247bbfba"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x5834198f "jepsen.nemesis.time$bump_gen_select$fn__2044@5834198f"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x4eb63dc8 "jepsen.nemesis.time$strobe_gen_select$fn__2049@4eb63dc8"]]))]),
                                            :pure
                                            (jepsen.generator.pure.Synchronize{
                                               :gen
                                               {:type :info,
                                                :f :check-offsets}}
                                             jepsen.generator.pure.Synchronize{
                                               :gen
                                               jepsen.generator.pure.Mix{
                                                 :i 0,
                                                 :gens
                                                 [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x402d6012 "jepsen.nemesis.time$reset_gen_select$fn__2041@402d6012"]
                                                  #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x395281c2 "jepsen.nemesis.time$bump_gen_select$fn__2044@395281c2"]
                                                  #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x41d20f06 "jepsen.nemesis.time$strobe_gen_select$fn__2049@41d20f06"]]}})}}}}
                                      {:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x1573e8a5 "clojure.core$partial$fn__5824@1573e8a5"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         {:stateful
                                          (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]),
                                          :pure
                                          jepsen.generator.pure.Mix{
                                            :i 0,
                                            :gens
                                            [{:stateful
                                              (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})),
                                              :pure
                                              jepsen.generator.pure.FlipFlop{
                                                :gens
                                                [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"]
                                                 ({:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  ...)],
                                                :i 0}}]}}}}]}},
                                  :pure
                                  jepsen.generator.pure.Mix{
                                    :i 1,
                                    :gens
                                    [{:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x184de357 "clojure.core$partial$fn__5824@184de357"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"] {:type :info, :f :stop-partition, :value nil}))),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        jepsen.generator.pure.FlipFlop{
                                          :gens
                                          [#object[jepsen.nemesis.combined$partition_package$start__2084 0xefe49ab "jepsen.nemesis.combined$partition_package$start__2084@efe49ab"]
                                           ({:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            ...)],
                                          :i 0}}}
                                     {:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x6dcf7b6a "clojure.core$partial$fn__5824@6dcf7b6a"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x53dba9cd "jepsen.generator$f_map$fn__4436@53dba9cd"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x247bbfba "jepsen.nemesis.time$reset_gen_select$fn__2041@247bbfba"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x5834198f "jepsen.nemesis.time$bump_gen_select$fn__2044@5834198f"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x4eb63dc8 "jepsen.nemesis.time$strobe_gen_select$fn__2049@4eb63dc8"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 0, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x402d6012 "jepsen.nemesis.time$reset_gen_select$fn__2041@402d6012"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x395281c2 "jepsen.nemesis.time$bump_gen_select$fn__2044@395281c2"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x41d20f06 "jepsen.nemesis.time$strobe_gen_select$fn__2049@41d20f06"]]}})})),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        jepsen.generator.pure.Map{
                                          :f
                                          #object[jepsen.generator.pure$f_map$transform__3608 0x3e753289 "jepsen.generator.pure$f_map$transform__3608@3e753289"],
                                          :gen
                                          {:stateful
                                           (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x247bbfba "jepsen.nemesis.time$reset_gen_select$fn__2041@247bbfba"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x5834198f "jepsen.nemesis.time$bump_gen_select$fn__2044@5834198f"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x4eb63dc8 "jepsen.nemesis.time$strobe_gen_select$fn__2049@4eb63dc8"]]))]),
                                           :pure
                                           (jepsen.generator.pure.Synchronize{
                                              :gen
                                              {:type :info,
                                               :f :check-offsets}}
                                            jepsen.generator.pure.Synchronize{
                                              :gen
                                              jepsen.generator.pure.Mix{
                                                :i 0,
                                                :gens
                                                [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x402d6012 "jepsen.nemesis.time$reset_gen_select$fn__2041@402d6012"]
                                                 #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x395281c2 "jepsen.nemesis.time$bump_gen_select$fn__2044@395281c2"]
                                                 #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x41d20f06 "jepsen.nemesis.time$strobe_gen_select$fn__2049@41d20f06"]]}})}}}}
                                     {:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x1573e8a5 "clojure.core$partial$fn__5824@1573e8a5"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        {:stateful
                                         (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]),
                                         :pure
                                         jepsen.generator.pure.Mix{
                                           :i 0,
                                           :gens
                                           [{:stateful
                                             (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"] {:type :info, :f :resume, :value :all})),
                                             :pure
                                             jepsen.generator.pure.FlipFlop{
                                               :gens
                                               [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x38022758 "jepsen.nemesis.combined$db_generators$pause__2067@38022758"]
                                                ({:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 ...)],
                                               :i 0}}]}}}}]}}}
                          jepsen.generator.pure.Map{
                            :f #object[jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097 0x39695803 "jepsen.mongodb.nemesis$shard_generator$fn__2096$fn__2097@39695803"],
                            :gen {:stateful
                                  {:stateful
                                   (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x6550ce46 "clojure.core$partial$fn__5824@6550ce46"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil}))), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] ({:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} {:type :info, :f :stop-partition, :value nil} ...)], :i 0}}} #jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x13b29b34 "clojure.core$partial$fn__5824@13b29b34"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x25589735 "jepsen.generator$f_map$fn__4436@25589735"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x46994f26 "jepsen.nemesis.time$reset_gen_select$fn__2041@46994f26"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x1bb172dd "jepsen.nemesis.time$bump_gen_select$fn__2044@1bb172dd"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x1cdd31a4 "jepsen.nemesis.time$strobe_gen_select$fn__2049@1cdd31a4"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 2, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x7dddfc35 "jepsen.nemesis.time$reset_gen_select$fn__2041@7dddfc35"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x71316cd7 "jepsen.nemesis.time$bump_gen_select$fn__2044@71316cd7"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x6106dfb6 "jepsen.nemesis.time$strobe_gen_select$fn__2049@6106dfb6"]]}})})), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.pure.Map{:f #object[jepsen.generator.pure$f_map$transform__3608 0x14239223 "jepsen.generator.pure$f_map$transform__3608@14239223"], :gen #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x46994f26 "jepsen.nemesis.time$reset_gen_select$fn__2041@46994f26"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x1bb172dd "jepsen.nemesis.time$bump_gen_select$fn__2044@1bb172dd"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x1cdd31a4 "jepsen.nemesis.time$strobe_gen_select$fn__2049@1cdd31a4"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 2, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x7dddfc35 "jepsen.nemesis.time$reset_gen_select$fn__2041@7dddfc35"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x71316cd7 "jepsen.nemesis.time$bump_gen_select$fn__2044@71316cd7"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x6106dfb6 "jepsen.nemesis.time$strobe_gen_select$fn__2049@6106dfb6"]]}})}}}} #jepsen.generator.StatefulPure{:stateful (gen/delayfn #object[clojure.core$partial$fn__5824 0x68df8c6 "clojure.core$partial$fn__5824@68df8c6"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}), :pure #jepsen.generator.pure.Stagger{:dt 4000000000, :next-time 0, :gen #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}}}]),
                                   :pure
                                   jepsen.generator.pure.Mix{
                                     :i 2,
                                     :gens
                                     [{:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x6550ce46 "clojure.core$partial$fn__5824@6550ce46"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil}))),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         jepsen.generator.pure.FlipFlop{
                                           :gens
                                           [#object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"]
                                            ({:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             {:type :info,
                                              :f :stop-partition,
                                              :value nil}
                                             ...)],
                                           :i 0}}}
                                      {:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x13b29b34 "clojure.core$partial$fn__5824@13b29b34"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x25589735 "jepsen.generator$f_map$fn__4436@25589735"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x46994f26 "jepsen.nemesis.time$reset_gen_select$fn__2041@46994f26"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x1bb172dd "jepsen.nemesis.time$bump_gen_select$fn__2044@1bb172dd"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x1cdd31a4 "jepsen.nemesis.time$strobe_gen_select$fn__2049@1cdd31a4"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 2, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x7dddfc35 "jepsen.nemesis.time$reset_gen_select$fn__2041@7dddfc35"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x71316cd7 "jepsen.nemesis.time$bump_gen_select$fn__2044@71316cd7"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x6106dfb6 "jepsen.nemesis.time$strobe_gen_select$fn__2049@6106dfb6"]]}})})),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         jepsen.generator.pure.Map{
                                           :f
                                           #object[jepsen.generator.pure$f_map$transform__3608 0x14239223 "jepsen.generator.pure$f_map$transform__3608@14239223"],
                                           :gen
                                           {:stateful
                                            (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x46994f26 "jepsen.nemesis.time$reset_gen_select$fn__2041@46994f26"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x1bb172dd "jepsen.nemesis.time$bump_gen_select$fn__2044@1bb172dd"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x1cdd31a4 "jepsen.nemesis.time$strobe_gen_select$fn__2049@1cdd31a4"]]))]),
                                            :pure
                                            (jepsen.generator.pure.Synchronize{
                                               :gen
                                               {:type :info,
                                                :f :check-offsets}}
                                             jepsen.generator.pure.Synchronize{
                                               :gen
                                               jepsen.generator.pure.Mix{
                                                 :i 2,
                                                 :gens
                                                 [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x7dddfc35 "jepsen.nemesis.time$reset_gen_select$fn__2041@7dddfc35"]
                                                  #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x71316cd7 "jepsen.nemesis.time$bump_gen_select$fn__2044@71316cd7"]
                                                  #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x6106dfb6 "jepsen.nemesis.time$strobe_gen_select$fn__2049@6106dfb6"]]}})}}}}
                                      {:stateful
                                       (gen/delayfn #object[clojure.core$partial$fn__5824 0x68df8c6 "clojure.core$partial$fn__5824@68df8c6"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}),
                                       :pure
                                       jepsen.generator.pure.Stagger{
                                         :dt 4000000000,
                                         :next-time 0,
                                         :gen
                                         {:stateful
                                          (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]),
                                          :pure
                                          jepsen.generator.pure.Mix{
                                            :i 0,
                                            :gens
                                            [{:stateful
                                              (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})),
                                              :pure
                                              jepsen.generator.pure.FlipFlop{
                                                :gens
                                                [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"]
                                                 ({:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  {:type :info,
                                                   :f :resume,
                                                   :value :all}
                                                  ...)],
                                                :i 0}}]}}}}]}},
                                  :pure
                                  jepsen.generator.pure.Mix{
                                    :i 2,
                                    :gens
                                    [{:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x6550ce46 "clojure.core$partial$fn__5824@6550ce46"] (gen/seqone (#object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil} #object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"] {:type :info, :f :stop-partition, :value nil}))),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        jepsen.generator.pure.FlipFlop{
                                          :gens
                                          [#object[jepsen.nemesis.combined$partition_package$start__2084 0x69f69078 "jepsen.nemesis.combined$partition_package$start__2084@69f69078"]
                                           ({:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            {:type :info,
                                             :f :stop-partition,
                                             :value nil}
                                            ...)],
                                          :i 0}}}
                                     {:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x13b29b34 "clojure.core$partial$fn__5824@13b29b34"] (gen/map #object[jepsen.generator$f_map$fn__4436 0x25589735 "jepsen.generator$f_map$fn__4436@25589735"] #jepsen.generator.StatefulPure{:stateful (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x46994f26 "jepsen.nemesis.time$reset_gen_select$fn__2041@46994f26"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x1bb172dd "jepsen.nemesis.time$bump_gen_select$fn__2044@1bb172dd"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x1cdd31a4 "jepsen.nemesis.time$strobe_gen_select$fn__2049@1cdd31a4"]]))]), :pure (#jepsen.generator.pure.Synchronize{:gen {:type :info, :f :check-offsets}} #jepsen.generator.pure.Synchronize{:gen #jepsen.generator.pure.Mix{:i 2, :gens [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x7dddfc35 "jepsen.nemesis.time$reset_gen_select$fn__2041@7dddfc35"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x71316cd7 "jepsen.nemesis.time$bump_gen_select$fn__2044@71316cd7"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x6106dfb6 "jepsen.nemesis.time$strobe_gen_select$fn__2049@6106dfb6"]]}})})),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        jepsen.generator.pure.Map{
                                          :f
                                          #object[jepsen.generator.pure$f_map$transform__3608 0x14239223 "jepsen.generator.pure$f_map$transform__3608@14239223"],
                                          :gen
                                          {:stateful
                                           (gen/concat [(gen/synchronize :fresh (gen/once :pending {:type :info, :f :check-offsets})) (gen/synchronize :fresh (gen/mix [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x46994f26 "jepsen.nemesis.time$reset_gen_select$fn__2041@46994f26"] #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x1bb172dd "jepsen.nemesis.time$bump_gen_select$fn__2044@1bb172dd"] #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x1cdd31a4 "jepsen.nemesis.time$strobe_gen_select$fn__2049@1cdd31a4"]]))]),
                                           :pure
                                           (jepsen.generator.pure.Synchronize{
                                              :gen
                                              {:type :info,
                                               :f :check-offsets}}
                                            jepsen.generator.pure.Synchronize{
                                              :gen
                                              jepsen.generator.pure.Mix{
                                                :i 2,
                                                :gens
                                                [#object[jepsen.nemesis.time$reset_gen_select$fn__2041 0x7dddfc35 "jepsen.nemesis.time$reset_gen_select$fn__2041@7dddfc35"]
                                                 #object[jepsen.nemesis.time$bump_gen_select$fn__2044 0x71316cd7 "jepsen.nemesis.time$bump_gen_select$fn__2044@71316cd7"]
                                                 #object[jepsen.nemesis.time$strobe_gen_select$fn__2049 0x6106dfb6 "jepsen.nemesis.time$strobe_gen_select$fn__2049@6106dfb6"]]}})}}}}
                                     {:stateful
                                      (gen/delayfn #object[clojure.core$partial$fn__5824 0x68df8c6 "clojure.core$partial$fn__5824@68df8c6"] #jepsen.generator.StatefulPure{:stateful (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]), :pure #jepsen.generator.pure.Mix{:i 0, :gens [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]}}),
                                      :pure
                                      jepsen.generator.pure.Stagger{
                                        :dt 4000000000,
                                        :next-time 0,
                                        :gen
                                        {:stateful
                                         (gen/mix [#jepsen.generator.StatefulPure{:stateful (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})), :pure #jepsen.generator.pure.FlipFlop{:gens [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] ({:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} {:type :info, :f :resume, :value :all} ...)], :i 0}}]),
                                         :pure
                                         jepsen.generator.pure.Mix{
                                           :i 0,
                                           :gens
                                           [{:stateful
                                             (gen/seqone (#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all} #object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"] {:type :info, :f :resume, :value :all})),
                                             :pure
                                             jepsen.generator.pure.FlipFlop{
                                               :gens
                                               [#object[jepsen.nemesis.combined$db_generators$pause__2067 0x7c206b14 "jepsen.nemesis.combined$db_generators$pause__2067@7c206b14"]
                                                ({:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 {:type :info,
                                                  :f :resume,
                                                  :value :all}
                                                 ...)],
                                               :i 0}}]}}}}]}}}]}}
               jepsen.generator.pure.OnThreads{
                 :f #object[clojure.core$complement$fn__5654 0x560d6d2 "clojure.core$complement$fn__5654@560d6d2"],
                 :gen jepsen.generator.pure.Stagger{
                   :dt 2000000,
                   :next-time 0,
                   :gen {:stateful
                         (gen/seqone ({:type :invoke, :f :txn, :value [[:append 9 1] [:r 7 nil] [:append 9 2]]} {:type :invoke, :f :txn, :value [[:append 7 1]]} {:type :invoke, :f :txn, :value [[:append 8 1] [:append 8 2]]} {:type :invoke, :f :txn, :value [[:r 9 nil] [:append 9 3] [:append 8 3] [:append 8 4]]} {:type :invoke, :f :txn, :value [[:append 8 5]]} {:type :invoke, :f :txn, :value [[:append 9 4]]} {:type :invoke, :f :txn, :value [[:r 5 nil]]} {:type :invoke, :f :txn, :value [[:r 9 nil]]})),
                         :pure
                         ({:type :invoke,
                           :f :txn,
                           :value [[:r 9 nil] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 1]
                            [:append 9 2]
                            [:r 9 nil]
                            [:r 7 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 6 nil] [:append 9 3]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 4]
                            [:r 5 nil]
                            [:r 9 nil]
                            [:r 6 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 8 nil] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 9 nil] [:append 7 1] [:append 9 5]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 8 1]]}
                          {:type :invoke, :f :txn, :value [[:r 5 nil]]}
                          {:type :invoke, :f :txn, :value [[:r 7 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 7 nil] [:append 9 6]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 8 nil] [:append 6 1] [:append 2 1]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 8 2]
                            [:append 9 7]
                            [:append 5 1]
                            [:r 5 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 8 nil] [:r 9 nil] [:append 7 2]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 8 nil]
                            [:r 6 nil]
                            [:r 7 nil]
                            [:r 9 nil]]}
                          {:type :invoke, :f :txn, :value [[:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 8]
                            [:append 8 3]
                            [:r 9 nil]
                            [:append 9 9]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 8 nil] [:append 7 3] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 10]
                            [:r 9 nil]
                            [:r 9 nil]
                            [:append 9 11]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 8 nil]
                            [:r 8 nil]
                            [:r 8 nil]
                            [:append 9 12]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 8 4] [:append 8 5] [:r 8 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 7 nil]
                            [:r 9 nil]
                            [:r 8 nil]
                            [:r 7 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 7 nil] [:append 8 6]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 13]
                            [:append 8 7]
                            [:r 7 nil]
                            [:append 9 14]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 9 nil]
                            [:append 9 15]
                            [:append 9 16]
                            [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:r 9 nil] [:r 9 nil]]}
                          {:type :invoke, :f :txn, :value [[:r 8 nil]]}
                          {:type :invoke, :f :txn, :value [[:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 9 nil] [:append 8 8] [:append 9 17]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 9 18]]}
                          {:type :invoke,
                           :f :txn,
                           :value [[:append 7 4]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:append 9 19] [:append 9 20] [:r 9 nil]]}
                          {:type :invoke,
                           :f :txn,
                           :value
                           [[:r 8 nil]
                            [:r 8 nil]
                            [:append 9 21]
                            [:r 9 nil]]}
                          ...)}}}]}}}),
 :os
 #object[jepsen.os.debian.Debian 0xa3cba3a "jepsen.os.debian.Debian@a3cba3a"],
 :time-limit 60,
 :version "4.2.6",
 :workload :list-append}

INFO [2020-08-04 01:01:02,419] jepsen node n4 - jepsen.os.debian n4 setting up debian
INFO [2020-08-04 01:01:02,419] jepsen node n1 - jepsen.os.debian n1 setting up debian
INFO [2020-08-04 01:01:02,419] jepsen node n5 - jepsen.os.debian n5 setting up debian
INFO [2020-08-04 01:01:02,419] jepsen node n6 - jepsen.os.debian n6 setting up debian
INFO [2020-08-04 01:01:02,419] jepsen node n3 - jepsen.os.debian n3 setting up debian
INFO [2020-08-04 01:01:02,419] jepsen node n7 - jepsen.os.debian n7 setting up debian
INFO [2020-08-04 01:01:02,419] jepsen node n2 - jepsen.os.debian n2 setting up debian
INFO [2020-08-04 01:01:05,245] jepsen test runner - jepsen.db Tearing down DB
INFO [2020-08-04 01:01:05,247] jepsen node n1 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:05,247] jepsen node n2 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:05,247] jepsen node n3 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:05,247] jepsen node n4 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:05,248] jepsen node n5 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:05,248] jepsen node n6 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:05,248] jepsen node n7 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:05,554] jepsen node n2 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x245cb8df jepsen.mongodb.db$replica_set_db$reify__479@245cb8df]}
INFO [2020-08-04 01:01:05,554] jepsen node n1 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x245cb8df jepsen.mongodb.db$replica_set_db$reify__479@245cb8df]}
INFO [2020-08-04 01:01:05,554] jepsen node n6 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x3a6e9856 jepsen.mongodb.db$replica_set_db$reify__479@3a6e9856]}
INFO [2020-08-04 01:01:05,554] jepsen node n3 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x245cb8df jepsen.mongodb.db$replica_set_db$reify__479@245cb8df]}
INFO [2020-08-04 01:01:05,556] jepsen node n4 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x3a6e9856 jepsen.mongodb.db$replica_set_db$reify__479@3a6e9856]}
INFO [2020-08-04 01:01:05,556] jepsen node n7 - jepsen.mongodb.db Tearing down shard {:name shard2, :nodes (n7), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x463045fb jepsen.mongodb.db$replica_set_db$reify__479@463045fb]}
INFO [2020-08-04 01:01:05,557] jepsen node n5 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x3a6e9856 jepsen.mongodb.db$replica_set_db$reify__479@3a6e9856]}
WARN [2020-08-04 01:01:05,657] jepsen node n5 - jepsen.control Encountered error with conn [:control "n5"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:01:05,658] jepsen node n7 - jepsen.control Encountered error with conn [:control "n7"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:01:05,658] jepsen node n4 - jepsen.control Encountered error with conn [:control "n4"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
INFO [2020-08-04 01:01:05,904] jepsen test runner - jepsen.core Snarfing log files
INFO [2020-08-04 01:01:06,356] jepsen node n1 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:06,356] jepsen node n2 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:06,356] jepsen node n3 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:06,356] jepsen node n4 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:06,356] jepsen node n5 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:06,356] jepsen node n6 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:06,356] jepsen node n7 - jepsen.control.util Stopping mongos
INFO [2020-08-04 01:01:06,660] jepsen node n2 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x245cb8df jepsen.mongodb.db$replica_set_db$reify__479@245cb8df]}
INFO [2020-08-04 01:01:06,660] jepsen node n4 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x3a6e9856 jepsen.mongodb.db$replica_set_db$reify__479@3a6e9856]}
INFO [2020-08-04 01:01:06,662] jepsen node n1 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x245cb8df jepsen.mongodb.db$replica_set_db$reify__479@245cb8df]}
INFO [2020-08-04 01:01:06,662] jepsen node n6 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x3a6e9856 jepsen.mongodb.db$replica_set_db$reify__479@3a6e9856]}
INFO [2020-08-04 01:01:06,662] jepsen node n5 - jepsen.mongodb.db Tearing down shard {:name shard1, :nodes (n4 n5 n6), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x3a6e9856 jepsen.mongodb.db$replica_set_db$reify__479@3a6e9856]}
INFO [2020-08-04 01:01:06,662] jepsen node n3 - jepsen.mongodb.db Tearing down shard {:name config, :nodes (n1 n2 n3), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x245cb8df jepsen.mongodb.db$replica_set_db$reify__479@245cb8df]}
INFO [2020-08-04 01:01:06,666] jepsen node n7 - jepsen.mongodb.db Tearing down shard {:name shard2, :nodes (n7), :db #object[jepsen.mongodb.db$replica_set_db$reify__479 0x463045fb jepsen.mongodb.db$replica_set_db$reify__479@463045fb]}
WARN [2020-08-04 01:01:06,764] jepsen node n7 - jepsen.control Encountered error with conn [:control "n7"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:01:06,764] jepsen node n6 - jepsen.control Encountered error with conn [:control "n6"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:01:06,764] jepsen node n5 - jepsen.control Encountered error with conn [:control "n5"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:01:06,764] jepsen node n1 - jepsen.control Encountered error with conn [:control "n1"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:01:06,764] jepsen node n3 - jepsen.control Encountered error with conn [:control "n3"]; reopening
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) [na:1.8.0_252]
	at clj_ssh.ssh$ssh_exec.invokeStatic(ssh.clj:690) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh_exec.invoke(ssh.clj:670) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invokeStatic(ssh.clj:723) ~[jepsen-0.1.19.jar:na]
	at clj_ssh.ssh$ssh.invoke(ssh.clj:699) ~[jepsen-0.1.19.jar:na]
	at jepsen.control.SSHRemote.execute_BANG_(control.clj:351) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_$fn__2929.invoke(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invokeStatic(control.clj:172) [jepsen-0.1.19.jar:na]
	at jepsen.control$ssh_STAR_.invoke(control.clj:168) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) [clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) [jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) [jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) [clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) [classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) [classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) [classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) [classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) [jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) [clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) [clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) [jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) [clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) [clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) [clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) [clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_252]
WARN [2020-08-04 01:01:07,124] main - jepsen.core Test crashed!
clojure.lang.ExceptionInfo: Command exited with non-zero status 1 on node n2:
sudo -S -u root bash -c "cd /; systemctl stop mongod"

STDIN:
null

STDOUT:


STDERR:
Failed to connect to bus: No such file or directory

	at slingshot.support$stack_trace.invoke(support.clj:201) ~[knossos-0.3.6.jar:na]
	at jepsen.control$throw_on_nonzero_exit.invokeStatic(control.clj:150) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$throw_on_nonzero_exit.invoke(control.clj:145) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) ~[clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) ~[clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) ~[classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) ~[classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) ~[classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) ~[classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) ~[jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) ~[jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) ~[clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) ~[clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) ~[clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) ~[clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) ~[clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_252]
WARN [2020-08-04 01:01:07,129] main - jepsen.cli Test crashed
clojure.lang.ExceptionInfo: Command exited with non-zero status 1 on node n2:
sudo -S -u root bash -c "cd /; systemctl stop mongod"

STDIN:
null

STDOUT:


STDERR:
Failed to connect to bus: No such file or directory

	at slingshot.support$stack_trace.invoke(support.clj:201) ~[knossos-0.3.6.jar:na]
	at jepsen.control$throw_on_nonzero_exit.invokeStatic(control.clj:150) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$throw_on_nonzero_exit.invoke(control.clj:145) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.invokeStatic(control.clj:194) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec_STAR_.doInvoke(control.clj:191) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:137) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invoke(core.clj:660) ~[clojure-1.10.0.jar:na]
	at jepsen.control$exec.invokeStatic(control.clj:210) ~[jepsen-0.1.19.jar:na]
	at jepsen.control$exec.doInvoke(control.clj:204) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:436) ~[clojure-1.10.0.jar:na]
	at jepsen.mongodb.db$stop_BANG_.invokeStatic(db.clj:81) ~[classes/:na]
	at jepsen.mongodb.db$stop_BANG_.invoke(db.clj:77) ~[classes/:na]
	at jepsen.mongodb.db$replica_set_db$reify__479.teardown_BANG_(db.clj:237) ~[classes/:na]
	at jepsen.mongodb.db.ShardedDB.teardown_BANG_(db.clj:396) ~[classes/:na]
	at jepsen.db$fn__3145$G__3141__3149.invoke(db.clj:10) ~[jepsen-0.1.19.jar:na]
	at jepsen.db$fn__3145$G__3140__3154.invoke(db.clj:10) ~[jepsen-0.1.19.jar:na]
	at clojure.core$partial$fn__5824.invoke(core.clj:2625) ~[clojure-1.10.0.jar:na]
	at jepsen.control$on_nodes$fn__3039.invoke(control.clj:450) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:154) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:142) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) ~[clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:408) ~[clojure-1.10.0.jar:na]
	at dom_top.core$real_pmap_helper$build_thread__214$fn__215.invoke(core.clj:146) ~[jepsen-0.1.19.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:665) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:425) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.applyTo(RestFn.java:132) ~[clojure-1.10.0.jar:na]
	at clojure.core$apply.invokeStatic(core.clj:669) ~[clojure-1.10.0.jar:na]
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003) ~[clojure-1.10.0.jar:na]
	at clojure.lang.RestFn.invoke(RestFn.java:397) ~[clojure-1.10.0.jar:na]
	at clojure.lang.AFn.run(AFn.java:22) ~[clojure-1.10.0.jar:na]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_252]



# Crashed tests

mongodb list-append 
mongodb list-append pause,kill,partition,clock,member

0 successes
0 unknown
2 crashed
0 failures
